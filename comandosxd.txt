> php artisan serve
	(Este es para levantar el servidor)

> npm run dev
	(Este es para correr módulos de node.js o algo así Xd, necesario por Tailwind y Flowbite)

> php artisan make:migration nombre_de_la_migracion
	Este es para crear las migraciones de las tablas que van hacer, si es para crear una tabla, tiene que tener la siguiente notación específica: 
    > php artisan make:migration create_personas_table 
    Debe tener create al inicio y table al final, todo en minúscula, en plural y en snake_case.

> php artisan make:model NombreModelo
	Este es para crear el modelo, que posteriormente se enlazará a la tabla de la migración. 
	Si se cumplen ciertas reglas, laravel puede hacerlo automáticamente, pero es mejor especificar la tabla dentro del modelo mismo.
	El nombre del modelo debe ser en CamelCase y en singular.

> php artisan migrate
	Este ejecuta las migraciones para que creen las tablas de la base de datos.
	Se le puede agregar ‘:fresh’ para hacer una migración limpia. Esto elimina todas las tablas y las vuelve a crear.
	Aparte, también se le puede (o debe) agregar el --seed. 
	Para que ejecute los seeders, que son clases encargadas de pre-cargar datos en las tablas. Al final quedaría el siguiente comando:
	> php artisan migrate:fresh –seed (Este borra todo y carga los datos de nuevo).

> php artisan make:livewire NombreComponente
	Como vamos a estar trabajando con componentes de livewire, este es el comando para crearlos. Debe ser en CamelCase.
	Si el componente estará dentro de varias carpetas, se le tiene que especificar la ruta con puntos (.), por ejemplo, 
	supongamos que estará dentro de la carpeta Personas, que está dentro de la carpeta crud. 
	Sería algo así:
	> php artisan make:livewire Crud.Personas.CrearPersona